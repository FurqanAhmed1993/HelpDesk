//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class TicketSystemEntities : DbContext
    {
        public TicketSystemEntities()
            : base("name=TicketSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ContactType> ContactTypes { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<MenuItem> MenuItems { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<RoleAccess> RoleAccesses { get; set; }
        public DbSet<Setup_Application> Setup_Application { get; set; }
        public DbSet<Setup_Color> Setup_Color { get; set; }
        public DbSet<Setup_Department> Setup_Department { get; set; }
        public DbSet<Setup_Designation> Setup_Designation { get; set; }
        public DbSet<Setup_Employee> Setup_Employee { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<TS_ChatLog> TS_ChatLog { get; set; }
        public DbSet<TS_MeetingAttachments> TS_MeetingAttachments { get; set; }
        public DbSet<TS_Setup_ChatType> TS_Setup_ChatType { get; set; }
        public DbSet<TS_Setup_Priority> TS_Setup_Priority { get; set; }
        public DbSet<TS_Setup_RequestMode> TS_Setup_RequestMode { get; set; }
        public DbSet<TS_Setup_RequestType> TS_Setup_RequestType { get; set; }
        public DbSet<TS_Setup_RequestTypeCategory> TS_Setup_RequestTypeCategory { get; set; }
        public DbSet<TS_Setup_RequestTypeSubcategory> TS_Setup_RequestTypeSubcategory { get; set; }
        public DbSet<TS_Setup_TicketLevel> TS_Setup_TicketLevel { get; set; }
        public DbSet<TS_Setup_TicketStatus> TS_Setup_TicketStatus { get; set; }
        public DbSet<TS_Setup_TicketType> TS_Setup_TicketType { get; set; }
        public DbSet<TS_StatusDetail> TS_StatusDetail { get; set; }
        public DbSet<TS_TaskAttachments> TS_TaskAttachments { get; set; }
        public DbSet<TS_TaskDetail> TS_TaskDetail { get; set; }
        public DbSet<TS_TaskLog> TS_TaskLog { get; set; }
        public DbSet<TS_TaskMaster> TS_TaskMaster { get; set; }
        public DbSet<TS_TicketAttachments> TS_TicketAttachments { get; set; }
        public DbSet<TS_TicketCC> TS_TicketCC { get; set; }
        public DbSet<TS_TicketComment> TS_TicketComment { get; set; }
        public DbSet<TS_TicketMeeting> TS_TicketMeeting { get; set; }
        public DbSet<TS_TicketMeetingDetail> TS_TicketMeetingDetail { get; set; }
        public DbSet<TS_TicketTo> TS_TicketTo { get; set; }
        public DbSet<UserLogin> UserLogins { get; set; }
        public DbSet<UserLoginHistory> UserLoginHistories { get; set; }
        public DbSet<TS_ChatLogReadDetail> TS_ChatLogReadDetail { get; set; }
        public DbSet<RoleStatusMapping> RoleStatusMappings { get; set; }
        public DbSet<TS_Setup_TypeOfIssue> TS_Setup_TypeOfIssue { get; set; }
        public DbSet<TS_TicketDetail> TS_TicketDetail { get; set; }
        public DbSet<TS_TicketMaster> TS_TicketMaster { get; set; }
        public DbSet<TS_Setup_TypeOfComplaint> TS_Setup_TypeOfComplaint { get; set; }
        public DbSet<TS_Setup_ProductSubCategory> TS_Setup_ProductSubCategory { get; set; }
        public DbSet<TS_Setup_City> TS_Setup_City { get; set; }
        public DbSet<Setup_TicketPreRequisite_Values> Setup_TicketPreRequisite_Values { get; set; }
        public DbSet<Setup_RequestTypeSubcategoryFieldType> Setup_RequestTypeSubcategoryFieldType { get; set; }
        public DbSet<Setup_RequestTypeSubcategoryFieldTypeDetail> Setup_RequestTypeSubcategoryFieldTypeDetail { get; set; }
        public DbSet<Setup_RequestTypeSubcategoryFieldValue> Setup_RequestTypeSubcategoryFieldValue { get; set; }
        public DbSet<TS_Setup_ReportedBy> TS_Setup_ReportedBy { get; set; }
        public DbSet<TS_Setup_TicketPreRequisiteValuesType> TS_Setup_TicketPreRequisiteValuesType { get; set; }
    
        public virtual ObjectResult<CircuitTypewiseClientCount_Result> CircuitTypewiseClientCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CircuitTypewiseClientCount_Result>("CircuitTypewiseClientCount");
        }
    
        public virtual ObjectResult<CircuitTypewiseClientRegionCount_Result> CircuitTypewiseClientRegionCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CircuitTypewiseClientRegionCount_Result>("CircuitTypewiseClientRegionCount");
        }
    
        public virtual ObjectResult<Client_Last60Day_Result> Client_Last60Day()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client_Last60Day_Result>("Client_Last60Day");
        }
    
        public virtual ObjectResult<ComplainDetail_Report_Result> ComplainDetail_Report(Nullable<int> lOCATIONID, Nullable<int> customerId, string branchCode, Nullable<int> areaId, Nullable<int> vendorId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var lOCATIONIDParameter = lOCATIONID.HasValue ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComplainDetail_Report_Result>("ComplainDetail_Report", lOCATIONIDParameter, customerIdParameter, branchCodeParameter, areaIdParameter, vendorIdParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<ComplainDetail_Report_bakup_Result> ComplainDetail_Report_bakup(Nullable<int> lOCATIONID, Nullable<int> customerId, string branchCode, Nullable<int> areaId, Nullable<int> vendorId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var lOCATIONIDParameter = lOCATIONID.HasValue ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComplainDetail_Report_bakup_Result>("ComplainDetail_Report_bakup", lOCATIONIDParameter, customerIdParameter, branchCodeParameter, areaIdParameter, vendorIdParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<ComplainDetail_Report_NEW_Result> ComplainDetail_Report_NEW(Nullable<int> lOCATIONID, Nullable<int> customerId, string branchCode, string vendor, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var lOCATIONIDParameter = lOCATIONID.HasValue ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComplainDetail_Report_NEW_Result>("ComplainDetail_Report_NEW", lOCATIONIDParameter, customerIdParameter, branchCodeParameter, vendorParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<ComplainsVisits_Report_Result> ComplainsVisits_Report(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComplainsVisits_Report_Result>("ComplainsVisits_Report", fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<ComplainsVisits_Report_NEW_Result> ComplainsVisits_Report_NEW(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string name)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComplainsVisits_Report_NEW_Result>("ComplainsVisits_Report_NEW", fromDateParameter, todateParameter, nameParameter);
        }
    
        public virtual ObjectResult<Get_Bulletin_POCEmail_Result> Get_Bulletin_POCEmail(string clientID, string clientDetailID, string locationID, string regionID, string productId, string exchangePOPId, string emailTypeId)
        {
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var clientDetailIDParameter = clientDetailID != null ?
                new ObjectParameter("ClientDetailID", clientDetailID) :
                new ObjectParameter("ClientDetailID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var regionIDParameter = regionID != null ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(string));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var exchangePOPIdParameter = exchangePOPId != null ?
                new ObjectParameter("ExchangePOPId", exchangePOPId) :
                new ObjectParameter("ExchangePOPId", typeof(string));
    
            var emailTypeIdParameter = emailTypeId != null ?
                new ObjectParameter("EmailTypeId", emailTypeId) :
                new ObjectParameter("EmailTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Bulletin_POCEmail_Result>("Get_Bulletin_POCEmail", clientIDParameter, clientDetailIDParameter, locationIDParameter, regionIDParameter, productIdParameter, exchangePOPIdParameter, emailTypeIdParameter);
        }
    
        public virtual ObjectResult<GetDC_Setup_ExchangePOP_Result> GetDC_Setup_ExchangePOP(Nullable<int> regionid, Nullable<int> locationId, Nullable<int> productid, string exchangePOP)
        {
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var exchangePOPParameter = exchangePOP != null ?
                new ObjectParameter("ExchangePOP", exchangePOP) :
                new ObjectParameter("ExchangePOP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDC_Setup_ExchangePOP_Result>("GetDC_Setup_ExchangePOP", regionidParameter, locationIdParameter, productidParameter, exchangePOPParameter);
        }
    
        public virtual ObjectResult<GetGlobelSerach_Result> GetGlobelSerach(Nullable<int> productid, Nullable<int> regionid, Nullable<int> locationId, Nullable<int> exchangePOPid, Nullable<int> customerTypeid, Nullable<int> clientid, string cAMNo, string iPAddress, string branchCode, string address)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var exchangePOPidParameter = exchangePOPid.HasValue ?
                new ObjectParameter("ExchangePOPid", exchangePOPid) :
                new ObjectParameter("ExchangePOPid", typeof(int));
    
            var customerTypeidParameter = customerTypeid.HasValue ?
                new ObjectParameter("CustomerTypeid", customerTypeid) :
                new ObjectParameter("CustomerTypeid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var cAMNoParameter = cAMNo != null ?
                new ObjectParameter("CAMNo", cAMNo) :
                new ObjectParameter("CAMNo", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGlobelSerach_Result>("GetGlobelSerach", productidParameter, regionidParameter, locationIdParameter, exchangePOPidParameter, customerTypeidParameter, clientidParameter, cAMNoParameter, iPAddressParameter, branchCodeParameter, addressParameter);
        }
    
        public virtual ObjectResult<GetGlobelSerach1_Backup_20160810_Result> GetGlobelSerach1_Backup_20160810(Nullable<int> productid, Nullable<int> regionid, Nullable<int> locationId, Nullable<int> exchangePOPid, Nullable<int> customerTypeid, Nullable<int> clientid, string clientName, string pOCName, string pOCEmail, string pOCContact, string cAMNo, string iPAddress, string branchCode, string address, Nullable<int> productStatusId)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var exchangePOPidParameter = exchangePOPid.HasValue ?
                new ObjectParameter("ExchangePOPid", exchangePOPid) :
                new ObjectParameter("ExchangePOPid", typeof(int));
    
            var customerTypeidParameter = customerTypeid.HasValue ?
                new ObjectParameter("CustomerTypeid", customerTypeid) :
                new ObjectParameter("CustomerTypeid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var pOCNameParameter = pOCName != null ?
                new ObjectParameter("POCName", pOCName) :
                new ObjectParameter("POCName", typeof(string));
    
            var pOCEmailParameter = pOCEmail != null ?
                new ObjectParameter("POCEmail", pOCEmail) :
                new ObjectParameter("POCEmail", typeof(string));
    
            var pOCContactParameter = pOCContact != null ?
                new ObjectParameter("POCContact", pOCContact) :
                new ObjectParameter("POCContact", typeof(string));
    
            var cAMNoParameter = cAMNo != null ?
                new ObjectParameter("CAMNo", cAMNo) :
                new ObjectParameter("CAMNo", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var productStatusIdParameter = productStatusId.HasValue ?
                new ObjectParameter("ProductStatusId", productStatusId) :
                new ObjectParameter("ProductStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGlobelSerach1_Backup_20160810_Result>("GetGlobelSerach1_Backup_20160810", productidParameter, regionidParameter, locationIdParameter, exchangePOPidParameter, customerTypeidParameter, clientidParameter, clientNameParameter, pOCNameParameter, pOCEmailParameter, pOCContactParameter, cAMNoParameter, iPAddressParameter, branchCodeParameter, addressParameter, productStatusIdParameter);
        }
    
        public virtual ObjectResult<GetIONSerach_Result> GetIONSerach(Nullable<int> regionid, Nullable<int> locationId, Nullable<int> customerTypeid, Nullable<int> clientid, Nullable<int> circuitTypeId, Nullable<int> exchangePOPid, string userId, string slot, string pON, string oNT, string oNTMCSerialNo, string oNTMCType, string iPAddress, string cAMNo, string address)
        {
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("Regionid", regionid) :
                new ObjectParameter("Regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var customerTypeidParameter = customerTypeid.HasValue ?
                new ObjectParameter("CustomerTypeid", customerTypeid) :
                new ObjectParameter("CustomerTypeid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var circuitTypeIdParameter = circuitTypeId.HasValue ?
                new ObjectParameter("CircuitTypeId", circuitTypeId) :
                new ObjectParameter("CircuitTypeId", typeof(int));
    
            var exchangePOPidParameter = exchangePOPid.HasValue ?
                new ObjectParameter("ExchangePOPid", exchangePOPid) :
                new ObjectParameter("ExchangePOPid", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var slotParameter = slot != null ?
                new ObjectParameter("Slot", slot) :
                new ObjectParameter("Slot", typeof(string));
    
            var pONParameter = pON != null ?
                new ObjectParameter("PON", pON) :
                new ObjectParameter("PON", typeof(string));
    
            var oNTParameter = oNT != null ?
                new ObjectParameter("ONT", oNT) :
                new ObjectParameter("ONT", typeof(string));
    
            var oNTMCSerialNoParameter = oNTMCSerialNo != null ?
                new ObjectParameter("ONTMCSerialNo", oNTMCSerialNo) :
                new ObjectParameter("ONTMCSerialNo", typeof(string));
    
            var oNTMCTypeParameter = oNTMCType != null ?
                new ObjectParameter("ONTMCType", oNTMCType) :
                new ObjectParameter("ONTMCType", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var cAMNoParameter = cAMNo != null ?
                new ObjectParameter("CAMNo", cAMNo) :
                new ObjectParameter("CAMNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIONSerach_Result>("GetIONSerach", regionidParameter, locationIdParameter, customerTypeidParameter, clientidParameter, circuitTypeIdParameter, exchangePOPidParameter, userIdParameter, slotParameter, pONParameter, oNTParameter, oNTMCSerialNoParameter, oNTMCTypeParameter, iPAddressParameter, cAMNoParameter, addressParameter);
        }
    
        public virtual ObjectResult<ManagedServiceDetailReport_Result> ManagedServiceDetailReport(Nullable<int> locationID, Nullable<int> regionId, Nullable<int> productId, Nullable<int> circuitType, string accountManager, Nullable<int> clientID, string camNo)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var circuitTypeParameter = circuitType.HasValue ?
                new ObjectParameter("CircuitType", circuitType) :
                new ObjectParameter("CircuitType", typeof(int));
    
            var accountManagerParameter = accountManager != null ?
                new ObjectParameter("AccountManager", accountManager) :
                new ObjectParameter("AccountManager", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var camNoParameter = camNo != null ?
                new ObjectParameter("CamNo", camNo) :
                new ObjectParameter("CamNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ManagedServiceDetailReport_Result>("ManagedServiceDetailReport", locationIDParameter, regionIdParameter, productIdParameter, circuitTypeParameter, accountManagerParameter, clientIDParameter, camNoParameter);
        }
    
        public virtual int OutageSummary_Report(string vendor, string customerId, string locationId)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutageSummary_Report", vendorParameter, customerIdParameter, locationIdParameter);
        }
    
        public virtual int OutageSummary_Report_NEW(string vendor, string customerId, string locationId)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutageSummary_Report_NEW", vendorParameter, customerIdParameter, locationIdParameter);
        }
    
        public virtual ObjectResult<ProductStatus_Result> ProductStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductStatus_Result>("ProductStatus");
        }
    
        public virtual ObjectResult<RegionClientCount_Result> RegionClientCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegionClientCount_Result>("RegionClientCount");
        }
    
        public virtual ObjectResult<RoleAccess_Select_Result> RoleAccess_Select(Nullable<int> role_Code)
        {
            var role_CodeParameter = role_Code.HasValue ?
                new ObjectParameter("Role_Code", role_Code) :
                new ObjectParameter("Role_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoleAccess_Select_Result>("RoleAccess_Select", role_CodeParameter);
        }
    
        public virtual ObjectResult<RoleAccess_SelectByApplicationid_Result> RoleAccess_SelectByApplicationid(Nullable<int> role_Code, Nullable<int> applicationID)
        {
            var role_CodeParameter = role_Code.HasValue ?
                new ObjectParameter("Role_Code", role_Code) :
                new ObjectParameter("Role_Code", typeof(int));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoleAccess_SelectByApplicationid_Result>("RoleAccess_SelectByApplicationid", role_CodeParameter, applicationIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        [EdmFunction("TicketSystemEntities", "split")]
        public virtual IQueryable<string> split(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[TicketSystemEntities].[split](@list, @delimiter)", listParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<Summary_Result> Summary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Summary_Result>("Summary");
        }
    
        public virtual int SummaryReport(string clientId, string locationId, string regionId)
        {
            var clientIdParameter = clientId != null ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SummaryReport", clientIdParameter, locationIdParameter, regionIdParameter);
        }
    
        public virtual ObjectResult<TOPAccountManagerClientwise_Result> TOPAccountManagerClientwise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPAccountManagerClientwise_Result>("TOPAccountManagerClientwise");
        }
    
        public virtual ObjectResult<TOPAccountManagerProductwise_Result> TOPAccountManagerProductwise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPAccountManagerProductwise_Result>("TOPAccountManagerProductwise");
        }
    
        public virtual ObjectResult<TOPBackupClient_Result> TOPBackupClient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPBackupClient_Result>("TOPBackupClient");
        }
    
        public virtual ObjectResult<TOPBackupLinkProduct_Result> TOPBackupLinkProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPBackupLinkProduct_Result>("TOPBackupLinkProduct");
        }
    
        public virtual ObjectResult<TOPClient_Result> TOPClient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPClient_Result>("TOPClient");
        }
    
        public virtual ObjectResult<TOPCustomerType_Result> TOPCustomerType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPCustomerType_Result>("TOPCustomerType");
        }
    
        public virtual ObjectResult<TOPExchangePOP_Result> TOPExchangePOP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPExchangePOP_Result>("TOPExchangePOP");
        }
    
        public virtual ObjectResult<TOPLocation_Result> TOPLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPLocation_Result>("TOPLocation");
        }
    
        public virtual ObjectResult<TOPPrimaryClient_Result> TOPPrimaryClient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPPrimaryClient_Result>("TOPPrimaryClient");
        }
    
        public virtual ObjectResult<TOPPrimaryLinkProduct_Result> TOPPrimaryLinkProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPPrimaryLinkProduct_Result>("TOPPrimaryLinkProduct");
        }
    
        public virtual ObjectResult<TOPProduct_Result> TOPProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPProduct_Result>("TOPProduct");
        }
    
        public virtual ObjectResult<TOPProductLink_Result> TOPProductLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPProductLink_Result>("TOPProductLink");
        }
    
        public virtual int TOPRegionClient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TOPRegionClient");
        }
    
        public virtual ObjectResult<TOPVendorLink_Result> TOPVendorLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPVendorLink_Result>("TOPVendorLink");
        }
    
        public virtual int TOPVendorRegionwise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TOPVendorRegionwise");
        }
    
        public virtual ObjectResult<string> TS_GetPOCEmailByCustomerId(string clientID)
        {
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TS_GetPOCEmailByCustomerId", clientIDParameter);
        }
    
        public virtual ObjectResult<TS_EmployeeHirerarchy_Result> TS_EmployeeHirerarchy(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TS_EmployeeHirerarchy_Result>("TS_EmployeeHirerarchy", userIDParameter);
        }
    
        public virtual ObjectResult<TS_GET_COMMENTS_HISTORY_Result> TS_GET_COMMENTS_HISTORY(Nullable<int> ticketMasterId)
        {
            var ticketMasterIdParameter = ticketMasterId.HasValue ?
                new ObjectParameter("TicketMasterId", ticketMasterId) :
                new ObjectParameter("TicketMasterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TS_GET_COMMENTS_HISTORY_Result>("TS_GET_COMMENTS_HISTORY", ticketMasterIdParameter);
        }
    
        public virtual ObjectResult<TS_GET_REPLY_RESPONSE_HISTORY_Result> TS_GET_REPLY_RESPONSE_HISTORY(Nullable<int> masterId, string type)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TS_GET_REPLY_RESPONSE_HISTORY_Result>("TS_GET_REPLY_RESPONSE_HISTORY", masterIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetGlobelSerach1_Backup_20170711_Result> GetGlobelSerach1_Backup_20170711(Nullable<int> productid, Nullable<int> regionid, Nullable<int> locationId, Nullable<int> exchangePOPid, Nullable<int> customerTypeid, Nullable<int> clientid, string clientName, string pOCName, string pOCEmail, string pOCContact, string cAMNo, string iPAddress, string branchCode, string address, Nullable<int> productStatusId)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var exchangePOPidParameter = exchangePOPid.HasValue ?
                new ObjectParameter("ExchangePOPid", exchangePOPid) :
                new ObjectParameter("ExchangePOPid", typeof(int));
    
            var customerTypeidParameter = customerTypeid.HasValue ?
                new ObjectParameter("CustomerTypeid", customerTypeid) :
                new ObjectParameter("CustomerTypeid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var pOCNameParameter = pOCName != null ?
                new ObjectParameter("POCName", pOCName) :
                new ObjectParameter("POCName", typeof(string));
    
            var pOCEmailParameter = pOCEmail != null ?
                new ObjectParameter("POCEmail", pOCEmail) :
                new ObjectParameter("POCEmail", typeof(string));
    
            var pOCContactParameter = pOCContact != null ?
                new ObjectParameter("POCContact", pOCContact) :
                new ObjectParameter("POCContact", typeof(string));
    
            var cAMNoParameter = cAMNo != null ?
                new ObjectParameter("CAMNo", cAMNo) :
                new ObjectParameter("CAMNo", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var productStatusIdParameter = productStatusId.HasValue ?
                new ObjectParameter("ProductStatusId", productStatusId) :
                new ObjectParameter("ProductStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGlobelSerach1_Backup_20170711_Result>("GetGlobelSerach1_Backup_20170711", productidParameter, regionidParameter, locationIdParameter, exchangePOPidParameter, customerTypeidParameter, clientidParameter, clientNameParameter, pOCNameParameter, pOCEmailParameter, pOCContactParameter, cAMNoParameter, iPAddressParameter, branchCodeParameter, addressParameter, productStatusIdParameter);
        }
    
        public virtual ObjectResult<GetGlobelSerach1_Backup_201707111_Result> GetGlobelSerach1_Backup_201707111(Nullable<int> productid, Nullable<int> regionid, Nullable<int> locationId, Nullable<int> exchangePOPid, Nullable<int> customerTypeid, Nullable<int> clientid, string clientName, string pOCName, string pOCEmail, string pOCContact, string cAMNo, string iPAddress, string branchCode, string address, Nullable<int> productStatusId)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var exchangePOPidParameter = exchangePOPid.HasValue ?
                new ObjectParameter("ExchangePOPid", exchangePOPid) :
                new ObjectParameter("ExchangePOPid", typeof(int));
    
            var customerTypeidParameter = customerTypeid.HasValue ?
                new ObjectParameter("CustomerTypeid", customerTypeid) :
                new ObjectParameter("CustomerTypeid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var pOCNameParameter = pOCName != null ?
                new ObjectParameter("POCName", pOCName) :
                new ObjectParameter("POCName", typeof(string));
    
            var pOCEmailParameter = pOCEmail != null ?
                new ObjectParameter("POCEmail", pOCEmail) :
                new ObjectParameter("POCEmail", typeof(string));
    
            var pOCContactParameter = pOCContact != null ?
                new ObjectParameter("POCContact", pOCContact) :
                new ObjectParameter("POCContact", typeof(string));
    
            var cAMNoParameter = cAMNo != null ?
                new ObjectParameter("CAMNo", cAMNo) :
                new ObjectParameter("CAMNo", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var productStatusIdParameter = productStatusId.HasValue ?
                new ObjectParameter("ProductStatusId", productStatusId) :
                new ObjectParameter("ProductStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGlobelSerach1_Backup_201707111_Result>("GetGlobelSerach1_Backup_201707111", productidParameter, regionidParameter, locationIdParameter, exchangePOPidParameter, customerTypeidParameter, clientidParameter, clientNameParameter, pOCNameParameter, pOCEmailParameter, pOCContactParameter, cAMNoParameter, iPAddressParameter, branchCodeParameter, addressParameter, productStatusIdParameter);
        }
    
        public virtual ObjectResult<TS_GET_CHAT_HISTORYDETAIL_Result> TS_GET_CHAT_HISTORYDETAIL(Nullable<int> userId, Nullable<int> masterId, Nullable<int> chatTypeId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(int));
    
            var chatTypeIdParameter = chatTypeId.HasValue ?
                new ObjectParameter("ChatTypeId", chatTypeId) :
                new ObjectParameter("ChatTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TS_GET_CHAT_HISTORYDETAIL_Result>("TS_GET_CHAT_HISTORYDETAIL", userIdParameter, masterIdParameter, chatTypeIdParameter);
        }
    
        public virtual ObjectResult<Dashboard_TopFive_CityWise_TicketsCount_Result> Dashboard_TopFive_CityWise_TicketsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_TopFive_CityWise_TicketsCount_Result>("Dashboard_TopFive_CityWise_TicketsCount");
        }
    
        public virtual ObjectResult<Dashboard_TopFive_CustomerWiseTicketsCount_Result> Dashboard_TopFive_CustomerWiseTicketsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_TopFive_CustomerWiseTicketsCount_Result>("Dashboard_TopFive_CustomerWiseTicketsCount");
        }
    
        public virtual ObjectResult<Dashboard_TopFive_ProductTicketsCount_Result> Dashboard_TopFive_ProductTicketsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_TopFive_ProductTicketsCount_Result>("Dashboard_TopFive_ProductTicketsCount");
        }
    
        public virtual ObjectResult<Dashboard_TopFive_UserWise_Relolved_TicketsCount_Result> Dashboard_TopFive_UserWise_Relolved_TicketsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_TopFive_UserWise_Relolved_TicketsCount_Result>("Dashboard_TopFive_UserWise_Relolved_TicketsCount");
        }
    
        public virtual ObjectResult<Dashboard_Trend_SevenDays_Result> Dashboard_Trend_SevenDays()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_Trend_SevenDays_Result>("Dashboard_Trend_SevenDays");
        }
    
        public virtual ObjectResult<TS_SearchTicket_Result> TS_SearchTicket(Nullable<int> uSERID, Nullable<int> initiatorId, Nullable<int> assigneeId, Nullable<int> customerTypeId, Nullable<int> cusomterId, Nullable<int> addressId, Nullable<int> priorityId, string ticketCode, string iPAddress, string cAMNO, string title, Nullable<int> departmentId, string statusId, Nullable<bool> isDeptTicket, Nullable<bool> isUnassigned, Nullable<bool> isClient)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var initiatorIdParameter = initiatorId.HasValue ?
                new ObjectParameter("InitiatorId", initiatorId) :
                new ObjectParameter("InitiatorId", typeof(int));
    
            var assigneeIdParameter = assigneeId.HasValue ?
                new ObjectParameter("AssigneeId", assigneeId) :
                new ObjectParameter("AssigneeId", typeof(int));
    
            var customerTypeIdParameter = customerTypeId.HasValue ?
                new ObjectParameter("CustomerTypeId", customerTypeId) :
                new ObjectParameter("CustomerTypeId", typeof(int));
    
            var cusomterIdParameter = cusomterId.HasValue ?
                new ObjectParameter("CusomterId", cusomterId) :
                new ObjectParameter("CusomterId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var priorityIdParameter = priorityId.HasValue ?
                new ObjectParameter("PriorityId", priorityId) :
                new ObjectParameter("PriorityId", typeof(int));
    
            var ticketCodeParameter = ticketCode != null ?
                new ObjectParameter("TicketCode", ticketCode) :
                new ObjectParameter("TicketCode", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var cAMNOParameter = cAMNO != null ?
                new ObjectParameter("CAMNO", cAMNO) :
                new ObjectParameter("CAMNO", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var statusIdParameter = statusId != null ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(string));
    
            var isDeptTicketParameter = isDeptTicket.HasValue ?
                new ObjectParameter("IsDeptTicket", isDeptTicket) :
                new ObjectParameter("IsDeptTicket", typeof(bool));
    
            var isUnassignedParameter = isUnassigned.HasValue ?
                new ObjectParameter("IsUnassigned", isUnassigned) :
                new ObjectParameter("IsUnassigned", typeof(bool));
    
            var isClientParameter = isClient.HasValue ?
                new ObjectParameter("IsClient", isClient) :
                new ObjectParameter("IsClient", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TS_SearchTicket_Result>("TS_SearchTicket", uSERIDParameter, initiatorIdParameter, assigneeIdParameter, customerTypeIdParameter, cusomterIdParameter, addressIdParameter, priorityIdParameter, ticketCodeParameter, iPAddressParameter, cAMNOParameter, titleParameter, departmentIdParameter, statusIdParameter, isDeptTicketParameter, isUnassignedParameter, isClientParameter);
        }
    
        public virtual ObjectResult<GetGlobelSerach1_Result> GetGlobelSerach1(Nullable<int> productid, Nullable<int> regionid, Nullable<int> locationId, Nullable<int> exchangePOPid, Nullable<int> customerTypeid, Nullable<int> clientid, string clientName, string pOCName, string pOCEmail, string pOCContact, string cAMNo, string iPAddress, string branchCode, string address, Nullable<int> productStatusId, Nullable<int> circuitTypeId)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var exchangePOPidParameter = exchangePOPid.HasValue ?
                new ObjectParameter("ExchangePOPid", exchangePOPid) :
                new ObjectParameter("ExchangePOPid", typeof(int));
    
            var customerTypeidParameter = customerTypeid.HasValue ?
                new ObjectParameter("CustomerTypeid", customerTypeid) :
                new ObjectParameter("CustomerTypeid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var pOCNameParameter = pOCName != null ?
                new ObjectParameter("POCName", pOCName) :
                new ObjectParameter("POCName", typeof(string));
    
            var pOCEmailParameter = pOCEmail != null ?
                new ObjectParameter("POCEmail", pOCEmail) :
                new ObjectParameter("POCEmail", typeof(string));
    
            var pOCContactParameter = pOCContact != null ?
                new ObjectParameter("POCContact", pOCContact) :
                new ObjectParameter("POCContact", typeof(string));
    
            var cAMNoParameter = cAMNo != null ?
                new ObjectParameter("CAMNo", cAMNo) :
                new ObjectParameter("CAMNo", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var productStatusIdParameter = productStatusId.HasValue ?
                new ObjectParameter("ProductStatusId", productStatusId) :
                new ObjectParameter("ProductStatusId", typeof(int));
    
            var circuitTypeIdParameter = circuitTypeId.HasValue ?
                new ObjectParameter("CircuitTypeId", circuitTypeId) :
                new ObjectParameter("CircuitTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGlobelSerach1_Result>("GetGlobelSerach1", productidParameter, regionidParameter, locationIdParameter, exchangePOPidParameter, customerTypeidParameter, clientidParameter, clientNameParameter, pOCNameParameter, pOCEmailParameter, pOCContactParameter, cAMNoParameter, iPAddressParameter, branchCodeParameter, addressParameter, productStatusIdParameter, circuitTypeIdParameter);
        }
    
        public virtual ObjectResult<string> Dashboard_GetAllChat(Nullable<int> fromUser, Nullable<int> toUser)
        {
            var fromUserParameter = fromUser.HasValue ?
                new ObjectParameter("FromUser", fromUser) :
                new ObjectParameter("FromUser", typeof(int));
    
            var toUserParameter = toUser.HasValue ?
                new ObjectParameter("ToUser", toUser) :
                new ObjectParameter("ToUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dashboard_GetAllChat", fromUserParameter, toUserParameter);
        }
    
        public virtual ObjectResult<Dashboard_PriorityWiseTicketsCount_Result1> Dashboard_PriorityWiseTicketsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_PriorityWiseTicketsCount_Result1>("Dashboard_PriorityWiseTicketsCount");
        }
    
        public virtual ObjectResult<string> TS_Populate_Ticket_code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TS_Populate_Ticket_code");
        }
    }
}
